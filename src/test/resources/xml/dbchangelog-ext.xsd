<?xml version="1.1" encoding="UTF-8"?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" version="1.1"
            targetNamespace="http://www.liquibase.org/xml/ns/dbchangelog-ext/vert"
            xmlns="http://www.liquibase.org/xml/ns/dbchangelog-ext/vert"
            elementFormDefault="qualified" >

    <xsd:import namespace="http://www.liquibase.org/xml/ns/dbchangelog"/>
    <!--xsd:redefine schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">
        <xsd:element name="createTable">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="column" minOccurs="1" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attributeGroup ref="tableNameAttribute"/>
                <xsd:attribute name="subquery" type="xsd:string"/>
                <xsd:attribute name="tablespace" type="xsd:string"/>
                <xsd:attribute name="remarks" type="xsd:string"/>
                <xsd:attribute name="orderby" type="xsd:string"/>
                <xsd:attribute name="partitionby" type="xsd:string"/>
                <xsd:attributeGroup ref="segmentation"/>
                <xsd:attribute name="ksafe" type="xsd:integer"/>
            </xsd:complexType>
        </xsd:element>
    </xsd:redefine-->
    <!-- Constraints state -->
    <xsd:simpleType name="propertyExpression" id="propertyExpression">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="$\{[\w\.]+\}"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="booleanExp" id="booleanExp">
        <xsd:annotation>
            <xsd:appinfo>
                <xsd:documentation>Extension to standard XSD boolean type to allow ${} parameters</xsd:documentation>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:boolean"/>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="propertyExpression"/>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>
    <xsd:simpleType name="integerExp" id="integerExp">
        <xsd:annotation>
            <xsd:appinfo>
                <xsd:documentation>Extension to standard XSD integer type to allow ${} parameters</xsd:documentation>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer"/>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="propertyExpression"/>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:pattern value=""/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:attributeGroup name="constraintState">
        <xsd:attribute name="disable" type="xsd:boolean"/>
        <xsd:attribute name="deferrable" type="xsd:boolean"/>
        <xsd:attribute name="initiallyDeferred" type="xsd:boolean"/>
        <xsd:attribute name="validate" type="xsd:boolean"/>
        <xsd:attribute name="rely" type="xsd:boolean"/>
    </xsd:attributeGroup>


    <!--    Constraint Attribute by Tomek  -->

    <xsd:attributeGroup name="checkAttribute">
        <xsd:attribute name="constraintName" type="xsd:string"/>
        <xsd:attribute name="condition" type="xsd:string" use="required"/>
    </xsd:attributeGroup>




    <!-- Add Deferred Primary Key  -->

    <xsd:attributeGroup name="constraintAtribute">
        <xsd:attribute name="constraintName" type="xsd:string" use="required"/>
        <xsd:attribute name="columnNames" type="xsd:string" use="required"/>
        <xsd:attribute name="deferrable" type="xsd:boolean"/>
        <xsd:attribute name="initiallyDeferred" type="xsd:boolean"/>
    </xsd:attributeGroup>


    <!-- Create Trigger -->

    <xsd:simpleType name="triggerActionType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="before"></xsd:enumeration>
            <xsd:enumeration value="after"></xsd:enumeration>
            <xsd:enumeration value="instead of"></xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="EnableDisable">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="enable"></xsd:enumeration>
            <xsd:enumeration value="disable"></xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>

    <!-- Long Update -->

    <xsd:element name="longUpdate">
        <xsd:complexType>
            <xsd:attribute name="commitInterval" type="xsd:integer" use="required"/>
            <xsd:attribute name="sleepSeconds" type="xsd:integer" use="required"/>
            <xsd:attribute name="updateSql" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>

    <!-- Set Transaction -->

    <xsd:simpleType name="ReadOnlyWrite">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="only"></xsd:enumeration>
            <xsd:enumeration value="write"></xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>


    <!-- Attributes for constraints -->
    <xsd:attributeGroup name="constraintsAttributes">
        <xsd:attribute name="nullable" type="booleanExp" />
        <xsd:attribute name="primaryKey" type="booleanExp" />
        <xsd:attribute name="primaryKeyName" type="xsd:string" />
        <xsd:attribute name="primaryKeyTablespace" type="xsd:string" />
        <xsd:attribute name="unique" type="booleanExp" />
        <xsd:attribute name="uniqueConstraintName" type="xsd:string" />
        <xsd:attribute name="references" type="xsd:string" />
        <xsd:attribute name="referencedTableName" type="xsd:string"/>
        <xsd:attribute name="referencedColumnNames" type="xsd:string"/>
        <xsd:attribute name="foreignKeyName" type="xsd:string" />
        <xsd:attribute name="deleteCascade" type="booleanExp" />
        <xsd:attribute name="deferrable" type="booleanExp" />
        <xsd:attribute name="initiallyDeferred" type="booleanExp" />
        <xsd:attribute name="checkConstraint" type="xsd:string" />
    </xsd:attributeGroup>


    <xsd:attributeGroup name="tableNameAttribute">
        <xsd:attribute name="catalogName" type="xsd:string"/>
        <xsd:attribute name="schemaName" type="xsd:string"/>
        <xsd:attribute name="tableName" type="xsd:string" use="required"/>
    </xsd:attributeGroup>

    <!-- Create Materialized View -->
    <xsd:attributeGroup name="segmentation">
        <xsd:attribute name="segmentedby" type="xsd:string"/>
        <xsd:attribute name="allNodes" type="xsd:boolean"/>
        <xsd:attribute name="offset" type="xsd:integer"/>
        <xsd:attribute name="nodes" type="xsd:string"/>
        <xsd:attribute name="unsegmented" type="xsd:boolean"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="projectionAttributes">
        <xsd:attribute name="projectionName" type="xsd:string" use="required"></xsd:attribute>
        <xsd:attribute name="schemaName" type="xsd:string"></xsd:attribute>
        <xsd:attribute name="columnAliases" type="xsd:string"></xsd:attribute>
        <xsd:attribute name="objectType" type="xsd:string"></xsd:attribute>
        <xsd:attribute name="reducedPrecision" type="xsd:boolean"></xsd:attribute>
        <xsd:attribute name="usingIndex" type="xsd:boolean"></xsd:attribute>
        <xsd:attribute name="tableSpace" type="xsd:string"></xsd:attribute>
        <xsd:attribute name="forUpdate" type="xsd:boolean"></xsd:attribute>

        <!--xsd:attribute name="queryRewrite" type="EnableDisable"></xsd:attribute-->
        <xsd:attribute name="orderby" type="xsd:string"/>
        <xsd:attribute name="subquery" type="xsd:string" use="required"></xsd:attribute>
        <xsd:attribute name="ksafe" type="integerExp"  ></xsd:attribute>
    </xsd:attributeGroup>

    <xsd:element name="createProjection">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="columnv" minOccurs="0" maxOccurs="unbounded" />
                <xsd:element ref="grouped" minOccurs="0" maxOccurs="unbounded" />
            </xsd:sequence>
            <xsd:attributeGroup ref="projectionAttributes"/>
            <xsd:attributeGroup ref="segmentation"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="constraints">
        <xsd:complexType>
            <xsd:attributeGroup ref="constraintsAttributes" />
        </xsd:complexType>
    </xsd:element>


    <xsd:element name="columnv">
        <xsd:complexType mixed="true">
            <xsd:sequence>
                <xsd:element ref="constraints" minOccurs="0"/>
            </xsd:sequence>
            <xsd:attributeGroup ref="columnv"/>
        </xsd:complexType>
    </xsd:element>


    <xsd:element name="grouped">
        <xsd:complexType mixed="true">
            <xsd:sequence>
                <xsd:element ref="columnv" minOccurs="2" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:attributeGroup name="columnv">
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="type" type="xsd:string"/>
        <xsd:attribute name="value" type="xsd:string"/>
        <xsd:attribute name="defaultValue" type="xsd:string"/>
        <xsd:attribute name="defaultValueSequenceCurrent" type="xsd:string"/>
        <xsd:attribute name="defaultValueSequenceNext" type="xsd:string"/>
        <xsd:attribute name="autoIncrement" type="xsd:boolean"/>
        <xsd:attribute name="startWith" type="xsd:long"/>
        <xsd:attribute name="incrementBy" type="xsd:long"/>
        <xsd:attribute name="remarks" type="xsd:string"/>
        <xsd:attribute name="encoding" type="xsd:string"/>
        <xsd:attribute name="accessrank" type="xsd:integer"/>
    </xsd:attributeGroup>

    <!-- Drop Materialized View -->

    <xsd:element name="dropProjection">
        <xsd:complexType>
            <xsd:attribute name="projectionName" type="xsd:string" use="required"></xsd:attribute>
            <xsd:attribute name="schemaName" type="xsd:string"></xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <!--  Truncate -->

    <xsd:element name="truncate">
        <xsd:complexType>
            <xsd:attribute name="schemaName" type="xsd:string"/>
            <xsd:attribute name="tableName" type="xsd:string"/>
            <xsd:attribute name="clusterName" type="xsd:string"/>
            <xsd:attribute name="purgeMaterializedViewLog" type="xsd:boolean"/>
            <xsd:attribute name="reuseStorage" type="xsd:boolean"/>
        </xsd:complexType>
    </xsd:element>

    <!--  Merge Tables -->

    <xsd:element name="mergeTables">
        <xsd:complexType>
            <xsd:attribute name="targetTableName" type="xsd:string" use="required"/>
            <xsd:attribute name="targetSchemaName" type="xsd:string"/>
            <xsd:attribute name="sourceSchemaName" type="xsd:string"/>
            <xsd:attribute name="sourceTableName" type="xsd:string" use="required"/>
            <xsd:attribute name="onCondition" type="xsd:string" use="required"/>
            <xsd:attribute name="updateCondition" type="xsd:string"/>
            <xsd:attribute name="insertCondition" type="xsd:string"/>
            <xsd:attribute name="deleteCondition" type="xsd:string"/>
            <xsd:attribute name="updateList" type="xsd:string"/>
            <xsd:attribute name="insertColumnsNameList" type="xsd:string"/>
            <xsd:attribute name="insertColumnsValueList" type="xsd:string"/>
        </xsd:complexType>
    </xsd:element>

    <!-- AddVerticaColumn-->
    <!--xsd:complexType name="addVerticaColumn">
        <extension base="addColumn">
            <xsd:sequence>
                <xsd:element name="column"  minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </extension>
    </xsd:complexType-->
</xsd:schema>